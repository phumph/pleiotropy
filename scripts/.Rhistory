# those from same Subpool.Env have a higher chance of actually being related
# if they're not from the ancestral group.
# need to break this out by subpool.environment
suppressWarnings(
autodip_dists %>%
dplyr::left_join(dat[,c('Full.BC','Subpool.Environment')],
by = 'Full.BC') ->
autodip_dists
)
# # plot by environment:
# autodip_dists %>%
#   ggplot() +
#   geom_histogram(aes(x = SQRT_SSED, fill = factor(autodip)), bins = 50) +
#   facet_wrap(~Subpool.Environment) +
#   theme_bw()
# this function will apply a cutoff rule to flag non-reference BCs to autodip class
assigned_autodip_bcs <- assign_autodip_status(autodip_dists, cutoff = arguments$cutoff)
# generate flags for original data and return
dat$autodip <- FALSE
dat$autodip[grepl(arguments$autodip_tag, dat$Which.Subpools)] <- TRUE
dat$autodip[dat$Full.BC %in% assigned_autodip_bcs] <- TRUE
# return modified input data for writing
return(dat)
}
debug_status <- TRUE
arguments <- run_args_parse(debug_status)
infile    <- OpenRead(arguments$infile)
dat <- read.table(infile,
header = TRUE,
sep = ',',
stringsAsFactors = F)
res_out <- main(dat, arguments)
outfile_path <- file.path(arguments$outdir, paste0(arguments$base_name, '_adapteds_autodips','.csv'))
outfile_path
cat(sprintf("Writing output file: %s\n", outfile_path))
arguments$base_name
head(autodip_dists)
outdir
cutoff    = assigned_autodip_output$cutoff
assign_autodip_status <- function(autodip_dists, cutoff) {
# define sum SQRT_SSED dist cutoff value
if (cutoff == 'max') {
d_cutoff <- ceiling(max(autodip_dists$SQRT_SSED[autodip_dists$autodip==1]))
} else if (is.numeric(cutoff)) {
d_cutoff <- ceiling(quantile(autodip_dists$SQRT_SSED[autodip_dists$autodip==1], probs = 1 - cutoff)) %>% as.numeric()
}
# apply cutoff to generate flags; retain barcodes to assign as autodips
assigned_autodips <- autodip_dists$Full.BC[autodip_dists$autodip == 0 & autodip_dists$SQRT_SSED <= d_cutoff]
return(list(cutoff = d_cutoff,
bcs = assigned_autodips)
)
}
# this function will apply a cutoff rule to flag non-reference BCs to autodip class
assigned_autodip_output <- assign_autodip_status(autodip_dists, cutoff = arguments$cutoff)
assigned_autodip_output$cutoff
assigned_autodip_output$bcs
cutoff    = assigned_autodip_output$cutoff
outdir    = arguments$outdir
base_name = arguments$base_name
base_name
outdir
cutoff
head(autodip_dists)
autodip_dists %>%
dplyr::mutate(ad_flag = ifelse(SQRT_SSED <= cutoff, 1, 0)) %>%
dplyr::group_by(Subpool.Environment) %>%
dplyr::summarise(n_ad_flags = sum(ad_flag))
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
dplyr::mutate(ad_flag = ifelse(SQRT_SSED <= cutoff, 1, 0)) %>%
dplyr::group_by(Subpool.Environment) %>%
dplyr::summarise(n_ad_flags = sum(ad_flag))
# make table
tab_dat <-
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
dplyr::mutate(ad_flag = ifelse(SQRT_SSED <= cutoff, 1, 0)) %>%
dplyr::group_by(Subpool.Environment) %>%
dplyr::summarise(n_ad_flags = sum(ad_flag)) %>%
dplyr::arrange(desc(n_ad_flags))
tab_dat
kable(tab_dat)
suppressWarnings(suppressMessages(library(knitr)))
suppressWarnings(suppressMessages(library(kableExtra)))
tab_dat %>%
kable()
?kable
tab_dat %>%
kable(format = 'markdown') %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
tab_dat %>%
kable(format = 'latex') %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
tab_dat %>%
kable(format = 'html') %>%
kable_styling(bootstrap_options = c("striped", "condensed"))
file.path(outdir,paste0(base_name,'_autodip_tally_by_env.html'))
base_name
outdir
file.path(outdir,base_name,paste0(base_name,'_autodip_tally_by_env.html'))
file.path(outdir,base_name,'autodip_tally_by_env.html')
tab_dat %>%
kable(format = 'html') %>%
kable_styling(bootstrap_options = c("striped", "condensed")) %>%
writeLines(con = file(file.path(outdir,base_name,'autodip_tally_by_env.html'), "w"))
tab_dat %>%
kable(format = 'html') %>%
kable_styling(bootstrap_options = c("striped", "condensed")) %>%
tab_dat %>%
kable(format = 'html') %>%
kable_styling(bootstrap_options = c("striped", "condensed")) %>%
writeLines(con = file(file.path(outdir,base_name,'autodip_tally_by_env.html'), "w"))
tab_dat %>%
kable(format = 'html') %>%
kable_styling(bootstrap_options = c("striped", "condensed")) %>%
writeLines(con = file(file.path(outdir,base_name,'autodip_tally_by_env.html'), "w"))
# output table
tab_dat %>%
kable(format = 'html') %>%
kable_styling(bootstrap_options = c("striped", "condensed")) %>%
writeLines(con = file.path(outdir,base_name,'autodip_tally_by_env.html'))
head(autodip_dists)
autodip_dists <-
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
dplyr::mutate(ad_flag = ifelse(SQRT_SSED <= cutoff, 1, 0))
# make table
tab_dat <-
autodip_dists %>%
dplyr::group_by(Subpool.Environment) %>%
dplyr::summarise(n_autodip_flags = sum(ad_flag)) %>%
dplyr::arrange(desc(n_autodip_flags))
head(autodip_dists)
autodip_dists <- distify_autodips(autodips   = autodips,
all_others = all_others)
autodip_dists <- distify_autodips(autodips   = autodips,
all_others = all_others)
# need to break this out by subpool.environment
suppressWarnings(
autodip_dists %>%
dplyr::left_join(dat[,c('Full.BC','Subpool.Environment')],
by = 'Full.BC') ->
autodip_dists
)
autodip_dists <-
autodip_dists %>%
dplyr::mutate(ad_flag = ifelse(SQRT_SSED <= cutoff, 1, 0))
head(autodip_dists)
# make table
tab_dat <-
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
dplyr::group_by(Subpool.Environment) %>%
dplyr::summarise(n_autodip_flags = sum(ad_flag)) %>%
dplyr::arrange(desc(n_autodip_flags))
# output table
tab_dat %>%
kable(format = 'html') %>%
kable_styling(bootstrap_options = c("striped", "condensed")) %>%
writeLines(con = file.path(outdir,base_name,'autodip_tally_by_env.html'))
head(autodip_dists)
# make plot
autodip_dists %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('dodgerblue','darkorange2')) +
theme_bw()
# make plot
autodip_dists %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50) +
facet_wrap(~ rev(autodip)) +
scale_fill_manual(values = c('dodgerblue','darkorange2')) +
theme_bw()
# make plot
autodip_dists %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('dodgerblue','darkorange2')) +
theme_bw()
# make plot
autodip_dists %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('dodgerblue','darkorange2')) +
theme_minimal() +
theme(axis.line = element_line())
# make plot
autodip_dists %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('dodgerblue','darkorange2'), name = '<= dist cutoff') +
theme_minimal() +
theme(axis.line = element_line())
# make plot
autodip_dists %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('dodgerblue','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line())
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'confirmed','test')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('dodgerblue','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line())
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'known AD+','unknown AD status')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('dodgerblue','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line())
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'known AD+','unknown AD status')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('dodgerblue','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line()) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2)
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'known AD+','unknown AD status')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.5) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('skyblue','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line()) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2)
darkorange2
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'known AD+','unknown AD status')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line()) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2)
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'refernce AD+ BCs','all other BCs')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line()) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2)
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'reference AD+ BCs','all other BCs')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line()) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2)
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'AD+ BCs reference set','all other BCs')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line()) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2)
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ Subpool.Environment, ncol = 5) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line()) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2)
# output plot
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ Subpool.Environment, nrow = 5) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line()) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2) ->
dist_plot_2
dist_plot_2
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ Subpool.Environment, nrow = 5, scales = 'free_y') +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line()) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2)
tab_dat
# output plot
autodip_dists$Subpool.Environment <- factor(autodip_dists$Subpool.Environment, levels = tab_dat$Subpool.Environment)
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ Subpool.Environment, nrow = 5, scales = 'free_y') +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line()) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2)
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ Subpool.Environment, nrow = 5, scales = 'free_y') +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(panel.border = element_rect(fill = NA)) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2)
head(autodip_dists)
n_dp <- sum(autodip_dists$autodip)
n_dp
arguments$base_name
paste0("Autodip. D distn (", n_dp," BCs)\n", base_name, "\ncutoff = ", cutoff)
paste0("Autodip. D distn (", n_dp," reference BCs)\n", base_name, "\nDist cutoff = ", cutoff)
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'AD+ BCs reference set','all other BCs')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line(),
plot.title = element_text(size = 9, face = 'bold')) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2) +
ggtitle(paste0("Autodip. D distn (", n_dp," reference BCs)\n", base_name, "\nDist cutoff = ", cutoff)) ->
dist_plot_1
dist_plot_1
n_other <- nrow(autodip_dists - n_dp)
n_other <- nrow(autodip_dists) - n_dp
n_other
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'AD+ BCs reference set','all other BCs')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line(),
plot.title = element_text(size = 9, face = 'bold')) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2) +
ggtitle(paste0("Autodip. D distn (", n_dp," reference BCs, ", n_other, " other BCs)\n", base_name, "\nDist cutoff = ", cutoff)) ->
dist_plot_1
dist_plot_1
sum(autodip_dists$ad_flag)
n_ad_flag = sum(autodip_dists$ad_flag[autodip_dists$autodip == 0])
n_ad_flag
paste0("Autodip. D distn (", n_dp," reference BCs, ", n_other, " other BCs)\n", base_name, "\nDist cutoff = ", cutoff, "\nNum. <= cutoff = ", n_ad_flag)
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'AD+ BCs reference set','all other BCs')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line(),
plot.title = element_text(size = 9, face = 'bold')) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2) +
ggtitle(paste0("Autodip. D distn (", n_dp," reference BCs, ", n_other, " other BCs)\n", base_name, "\nDist cutoff = ", cutoff, "\nNum. <= cutoff = ", n_ad_flag)) ->
dist_plot_1
dist_plot_1
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'AD+ BCs reference set','all other BCs')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(axis.line = element_line(),
plot.title = element_text(size = 9, face = 'bold')) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2) +
ggtitle(paste0("Autodip. D distn (", n_dp," reference BCs, ", n_other, " other BCs)\n", base_name, "\nDist cutoff = ", cutoff, "\nNum. BCs <= cutoff = ", n_ad_flag)) ->
dist_plot_1
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ Subpool.Environment, nrow = 5, scales = 'free_y') +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(panel.border = element_rect(fill = NA)) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2) ->
dist_plot_2
dist_plot_2
dist_plot_1 / dist_plot_2
ggpubr::ggarrange(plotlist = list(dist_plot_1,dist_plot_2), nrow = 2, common.legend = T)
ggpubr::ggarrange(plotlist = list(dist_plot_1,dist_plot_2), nrow = 2, common.legend = T, heights = c(1,3))
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'AD+ BCs reference set','all other BCs')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ autodip) +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(panel.border = element_rect(fill = NA),
plot.title = element_text(size = 9, face = 'bold')) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2) +
ggtitle(paste0("Autodip. D distn (", n_dp," reference BCs, ", n_other, " other BCs)\n", base_name, "\nDist cutoff = ", cutoff, "\nNum. BCs <= cutoff = ", n_ad_flag)) ->
dist_plot_1
dist_plot_1
ggpubr::ggarrange(plotlist = list(dist_plot_1,dist_plot_2), nrow = 2, common.legend = T, heights = c(1,3),
labels= c('a','b')) %>%
ggsave(filename = file.path(outdir, base_name, 'autodip_tally_plots.png'),
device = 'png',
dpi = 300,
width = 6,
height = 9)
ggpubr::ggarrange(plotlist = list(dist_plot_1,dist_plot_2), nrow = 2, common.legend = T, heights = c(1,3),
labels= c('a','b')) %>%
ggsave(filename = file.path(outdir, base_name, 'autodip_tally_plots.png'),
device = 'png',
dpi = 300,
width = 4,
height = 9)
ggpubr::ggarrange(plotlist = list(dist_plot_1,dist_plot_2), nrow = 2, align = 'hv',
common.legend = T, heights = c(1,3),
labels= c('a','b')) %>%
ggsave(filename = file.path(outdir, base_name, 'autodip_tally_plots.png'),
device = 'png',
dpi = 300,
width = 4.5,
height = 9)
plot_autodip_status <- function(autodip_dists, cutoff, outdir, base_name) {
n_dp <- sum(autodip_dists$autodip)
n_other <- nrow(autodip_dists) - n_dp
autodip_dists <-
autodip_dists %>%
dplyr::mutate(ad_flag = ifelse(SQRT_SSED <= cutoff, 1, 0))
n_ad_flag <- sum(autodip_dists$ad_flag[autodip_dists$autodip == 0])
# make table
tab_dat <-
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
dplyr::group_by(Subpool.Environment) %>%
dplyr::summarise(n_autodip_flags = sum(ad_flag)) %>%
dplyr::arrange(desc(n_autodip_flags))
# output table
tab_dat %>%
kable(format = 'html') %>%
kable_styling(bootstrap_options = c("striped", "condensed")) %>%
writeLines(con = file.path(outdir, base_name, 'autodip_tally_by_env.html'))
# make plot
autodip_dists %>%
dplyr::mutate(autodip = ifelse(autodip == 1, 'AD+ BCs reference set','all other BCs')) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ autodip, scales = 'free_y') +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(panel.border = element_rect(fill = NA),
plot.title = element_text(size = 9, face = 'bold')) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2) +
ggtitle(paste0("Autodip. D distn (", n_dp," reference BCs, ", n_other, " other BCs)\n", base_name, "\nDist cutoff = ", cutoff, "\nNum. BCs <= cutoff = ", n_ad_flag)) ->
dist_plot_1
# output plot
autodip_dists$Subpool.Environment <- factor(autodip_dists$Subpool.Environment, levels = tab_dat$Subpool.Environment)
autodip_dists %>%
dplyr::filter(autodip == 0) %>%
ggplot() +
geom_histogram(aes(x = SQRT_SSED, fill = factor(ad_flag)), bins = 50, alpha = 0.8) +
facet_wrap(~ Subpool.Environment, nrow = 5, scales = 'free_y') +
scale_fill_manual(values = c('gray40','darkorange2'), name = 'below cutoff') +
theme_minimal() +
theme(panel.border = element_rect(fill = NA)) +
geom_vline(xintercept = cutoff, col = 'gray60', lty = 2) ->
dist_plot_2
ggpubr::ggarrange(plotlist = list(dist_plot_1,dist_plot_2), nrow = 2, align = 'hv',
common.legend = T, heights = c(1,3),
labels= c('a','b')) %>%
ggsave(filename = file.path(outdir, base_name, 'autodip_tally_plots.png'),
device = 'png',
dpi = 300,
width = 4.5,
height = 9)
}
# plot for output
plot_autodip_status(autodip_dists,
cutoff    = assigned_autodip_output$cutoff,
outdir    = arguments$outdir,
base_name = arguments$base_name)
